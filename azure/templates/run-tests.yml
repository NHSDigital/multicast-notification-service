parameters:
  - name: app_id
    type: string
    default: ""
  - name: test_command
    type: string
    default: make test

steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests
    condition: always()

  - bash: |
      export PROXY_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
      export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
      export APIGEE_APP_ID=${{ parameters.app_id }}
      export STATUS_ENDPOINT_API_KEY="$(STATUS_ENDPOINT_API_KEY)"
      export SOURCE_COMMIT_ID="$(Build.SourceVersion)"
      ${{ parameters.test_command }}
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Run full test suite
  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/test-report.xml'
      failTaskOnFailedTests: true
